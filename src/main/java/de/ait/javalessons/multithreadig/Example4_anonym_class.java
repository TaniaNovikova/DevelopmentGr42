package de.ait.javalessons.multithreadig;

//Мы хотим по-быстрому создать  запустить поток,
// не используя класс, который имплементирует runnable
public class Example4_anonym_class {
    public static void main(String[] args) {
        //1. способ: в параметр new Thread мы должны передать объект,
        // который имплементирует Runnable,
        // те. будем использовать здесь анонимные классы
        new Thread(new Runnable() {
            @Override
            public void run() {
                System.out.println("анонимный класс");
            }
        }).start();

        //2.способ:
        //Runnable - это функциональный интерфейс,
        // он использует всего лишь один абстрактный метод
        //поэтому в параметре можно использовать лямбда-выражение

        new Thread(() -> System.out.println("лямбда-выражение")).start();

//После запуска потоков методом start()
// они отработали параллельно, а поток мэйн работает
// сам по себе, т. е. работали одновременно 3 потока,
// при этом поток мэйн не сделал ничего, а два других
// потока вывели свой sout

        /*
        *********Cоздание нового потока**************
        * Создаем класс, который имплементирует Runnable,
        * переопределяем метод run() и запускаем наш поток, используя класс
        * Thread, в параметры его вставляем объект, который имплементировал
        * Runnable и запускаем методом start()
        * */
    }

}
